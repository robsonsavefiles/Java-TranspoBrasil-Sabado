/*
 * InvNautico.java
 *
 * Created on 1 de Fevereiro de 2006, 10:55
 */

package br.com.invnautico.core.gui;

import br.com.invnautico.core.model.INBasicEntity;
import br.com.invnautico.core.model.INBrand;
import br.com.invnautico.core.model.INCategory;
import br.com.invnautico.core.model.INComponent;
import br.com.invnautico.core.model.INEquipment;
import br.com.invnautico.core.model.INLocation;
import br.com.invnautico.core.model.INMembership;
import br.com.invnautico.core.persistence.DataManager;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author  vsenger
 */
public class InvNautico extends javax.swing.JFrame {
    DefaultMutableTreeNode root = new DefaultMutableTreeNode("Meu Inventário");
    
    DefaultMutableTreeNode nodeLocais = new DefaultMutableTreeNode("Locais");
    DefaultMutableTreeNode nodeMarcas = new DefaultMutableTreeNode("Marcas");
    DefaultMutableTreeNode nodeCategorias = new DefaultMutableTreeNode("Categorias");
    DefaultMutableTreeNode nodeMembers= new DefaultMutableTreeNode("Memberships");
    DefaultTreeModel treeModel = new DefaultTreeModel(root);
    TreeDragSource ds;
    TreeDropTarget dt;
    
    /** Creates new form InvNautico */
    public InvNautico() {
        initComponents();
        meuInicializador();
        populateTree();
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "introduction");
    }
    public void meuInicializador() {
        centerWindow();
        basicEntityPanel1.master=this;
        membershipPanel1.master=this;
        treeInventario.setShowsRootHandles(false);
        
        //ds = new TreeDragSource(treeInventario, DnDConstants.ACTION_COPY_OR_MOVE);
        //dt = new TreeDropTarget(treeInventario);
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        menuNodes = new javax.swing.JPopupMenu();
        menuNodesNew = new javax.swing.JMenuItem();
        menuNodesDelete = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        menuNodesCopiar = new javax.swing.JMenuItem();
        menuNodesRecortar = new javax.swing.JMenuItem();
        menuNodesColar = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelArvoreDados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeInventario = new javax.swing.JTree();
        panelAreaDados = new javax.swing.JPanel();
        basicEntityPanel1 = new br.com.invnautico.core.gui.panel.BasicEntityPanel();
        membershipPanel1 = new br.com.invnautico.core.gui.panel.MembershipPanel();
        introductionPanel1 = new br.com.invnautico.core.gui.introduction.IntroductionPanel();
        genericIntroductionPanel1 = new br.com.invnautico.core.gui.introduction.GenericIntroductionPanel();
        menuBarPrincipal = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        menuNewMember = new javax.swing.JMenuItem();
        menuNewEquipment = new javax.swing.JMenuItem();
        menuNewComponent = new javax.swing.JMenuItem();
        menuNewCategory = new javax.swing.JMenuItem();
        menuNewLocation = new javax.swing.JMenuItem();
        menuNewBrand = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuEditRefresh = new javax.swing.JMenuItem();
        menuAparencia = new javax.swing.JMenu();
        menuAparenciaJava = new javax.swing.JMenuItem();
        menuAparenciaWindows = new javax.swing.JMenuItem();
        menuAparenciaUnix = new javax.swing.JMenuItem();

        menuNodesNew.setMnemonic('N');
        menuNodesNew.setText("Novo...");
        menuNodes.add(menuNodesNew);

        menuNodesDelete.setMnemonic('A');
        menuNodesDelete.setText("Apagar");
        menuNodesDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNodesDeleteActionPerformed(evt);
            }
        });

        menuNodes.add(menuNodesDelete);

        menuNodes.add(jSeparator1);

        menuNodesCopiar.setMnemonic('C');
        menuNodesCopiar.setText("Copiar");
        menuNodes.add(menuNodesCopiar);

        menuNodesRecortar.setMnemonic('R');
        menuNodesRecortar.setText("Recortar");
        menuNodesRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNodesRecortarActionPerformed(evt);
            }
        });

        menuNodes.add(menuNodesRecortar);

        menuNodesColar.setMnemonic('l');
        menuNodesColar.setText("Colar");
        menuNodes.add(menuNodesColar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Invent\u00e1rio Nautico 1.0");
        jSplitPane1.setDividerLocation(200);
        panelArvoreDados.setLayout(new java.awt.BorderLayout());

        treeInventario.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeInventarioValueChanged(evt);
            }
        });
        treeInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeInventarioMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(treeInventario);

        panelArvoreDados.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(panelArvoreDados);

        panelAreaDados.setLayout(new java.awt.CardLayout());

        panelAreaDados.add(basicEntityPanel1, "basicEntity");

        panelAreaDados.add(membershipPanel1, "membership");

        panelAreaDados.add(introductionPanel1, "introduction");

        panelAreaDados.add(genericIntroductionPanel1, "genericIntroduction");

        jSplitPane1.setRightComponent(panelAreaDados);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        menuFile.setText("Arquivo");
        menuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileActionPerformed(evt);
            }
        });

        jMenu1.setText("New");
        menuNewMember.setText("Membership");
        menuNewMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewMemberActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewMember);

        menuNewEquipment.setText("Equipamento");
        menuNewEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewEquipmentActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewEquipment);

        menuNewComponent.setText("Componente / Pe\u00e7a");
        menuNewComponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewComponentActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewComponent);

        menuNewCategory.setText("Categoria");
        menuNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewCategoryActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewCategory);

        menuNewLocation.setText("Localiza\u00e7\u00e3o");
        menuNewLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewLocationActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewLocation);

        menuNewBrand.setText("Marca");
        menuNewBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewBrandActionPerformed(evt);
            }
        });

        jMenu1.add(menuNewBrand);

        menuFile.add(jMenu1);

        menuBarPrincipal.add(menuFile);

        menuEdit.setText("Editar");
        menuEditRefresh.setMnemonic('R');
        menuEditRefresh.setText("Refresh");
        menuEditRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditRefreshActionPerformed(evt);
            }
        });

        menuEdit.add(menuEditRefresh);

        menuBarPrincipal.add(menuEdit);

        menuAparencia.setText("Apar\u00eancia");
        menuAparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAparenciaActionPerformed(evt);
            }
        });

        menuAparenciaJava.setText("Java");
        menuAparenciaJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAparenciaJavaActionPerformed(evt);
            }
        });

        menuAparencia.add(menuAparenciaJava);

        menuAparenciaWindows.setText("Windows");
        menuAparenciaWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAparenciaWindowsActionPerformed(evt);
            }
        });

        menuAparencia.add(menuAparenciaWindows);

        menuAparenciaUnix.setText("Linux");
        menuAparenciaUnix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAparenciaUnixActionPerformed(evt);
            }
        });

        menuAparencia.add(menuAparenciaUnix);

        menuBarPrincipal.add(menuAparencia);

        setJMenuBar(menuBarPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAparenciaUnixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAparenciaUnixActionPerformed
// TODO add your handling code here:
        try {                         
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
            this.pack();
        } catch(Exception e){
            e.printStackTrace();
        }        
    }//GEN-LAST:event_menuAparenciaUnixActionPerformed
    
    
    private void menuAparenciaActionPerformed(java.awt.event.ActionEvent evt) {                                                
// TODO add your handling code here:
        
    }                                               
    
    private void menuAparenciaLinuxActionPerformed(java.awt.event.ActionEvent evt) {                                                
// TODO add your handling code here:

    }                                               
        private void menuAparenciaWindowsActionPerformed(java.awt.event.ActionEvent evt) {                                                
// TODO add your handling code here:
            try {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                SwingUtilities.updateComponentTreeUI(this);
                this.pack();
            } catch(Exception e){
                e.printStackTrace();
            }
            
    }                                               
            private void menuAparenciaJavaActionPerformed(java.awt.event.ActionEvent evt) {                                                
// TODO add your handling code here:
                try {
                    UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
                    SwingUtilities.updateComponentTreeUI(this);
                    this.pack();
                } catch(Exception e){}
                
    }                                               
            
    private void menuEditRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditRefreshActionPerformed
// TODO add your handling code here:
        populateTree();
    }//GEN-LAST:event_menuEditRefreshActionPerformed
    
    private void menuNodesDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNodesDeleteActionPerformed
// TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) treeInventario.getLastSelectedPathComponent();
        
        if(node==null) return;
        if(!(node.getUserObject() instanceof String)) {
            //Javnela de confirmação
            int r =  JOptionPane.showConfirmDialog(this, "Confirma a exclusão do " + node.getUserObject().toString() + " ?");
            if(r == JOptionPane.OK_OPTION) {
                DataManager.getInstance().delete(node.getUserObject());
                populateTree();
            }
            //Atualização completa da árvore, pois não sabemos o que o delete pode afetar hierarquicamente falando...
        }
        
    }//GEN-LAST:event_menuNodesDeleteActionPerformed
    
    private void menuNodesRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNodesRecortarActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_menuNodesRecortarActionPerformed
    
    private void treeInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeInventarioMouseClicked
// TODO add your handling code here:
        if(evt.getButton()==evt.BUTTON2 || evt.getButton()==evt.BUTTON3) {
            
            menuNodes.show(this, evt.getX()+15, evt.getY()+50);
            
        }
    }//GEN-LAST:event_treeInventarioMouseClicked
    
    private void menuNewMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewMemberActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "membership");
        membershipPanel1.setEntityObject(new INMembership());
        
    }//GEN-LAST:event_menuNewMemberActionPerformed
    
    private void menuNewEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewEquipmentActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "equipment");
        
    }//GEN-LAST:event_menuNewEquipmentActionPerformed
    
    private void menuNewComponentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewComponentActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "component");
        
    }//GEN-LAST:event_menuNewComponentActionPerformed
    
    private void menuNewCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewCategoryActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "basicEntity");
        basicEntityPanel1.setEntityObject(new INCategory());
        
    }//GEN-LAST:event_menuNewCategoryActionPerformed
    
    private void menuNewBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewBrandActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "basicEntity");
        basicEntityPanel1.setEntityObject(new INBrand());
        
    }//GEN-LAST:event_menuNewBrandActionPerformed
    
    private void menuNewLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewLocationActionPerformed
// TODO add your handling code here:
        ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "basicEntity");
        basicEntityPanel1.setEntityObject(new INLocation());
    }//GEN-LAST:event_menuNewLocationActionPerformed
    
    private void menuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_menuFileActionPerformed
    
    private void treeInventarioValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeInventarioValueChanged
// TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) treeInventario.getLastSelectedPathComponent();
        
        if(node==null) return;
        if(node.getUserObject() instanceof String) {
            if(node.getUserObject().toString().equals("Meu Inventário")) {
                ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "introduction");
            } else {
                ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "genericIntroduction");
                genericIntroductionPanel1.setEntidade(node.getUserObject().toString());
            }
        } else if(node.getUserObject() instanceof INCategory ||
                node.getUserObject() instanceof INLocation ||
                node.getUserObject() instanceof INBrand) {
            ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "basicEntity");
            basicEntityPanel1.setEntityObject((INBasicEntity)node.getUserObject());
        } else if(node.getUserObject() instanceof INMembership) {
            ((CardLayout) panelAreaDados.getLayout()).show(panelAreaDados, "membership");
            membershipPanel1.setEntityObject((INMembership) node.getUserObject());
        }
        
    }//GEN-LAST:event_treeInventarioValueChanged
    public void centerWindow() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
        
    }
    
    public void populateTree() {
        root.add(nodeMembers);
        root.add(nodeLocais);
        root.add(nodeMarcas);
        root.add(nodeCategorias);
        treeInventario.setModel(treeModel);
        populateTreeMembers();
        populateTreeBrand();
        populateTreeLocation();
        populateTreeCategory();
    }
    
    
    public boolean dataManagerOK() {
        if(!DataManager.getInstance().isOpen()) {
            String retorno = DataManager.getInstance().open();
            if(retorno.equals("")) {
                return true;
            } else {
                JOptionPane.showMessageDialog(this,"Erro no Banco de Dados", "Erro ao estabelecer comunicação com o banco de dados.\n\n" + retorno, JOptionPane.OK_OPTION);
                return false;
            }
        } else {
            return true;
        }
    }
    /*
     * Montagem do nó de Categorias
     */
    public void populateTreeCategory() {
        if(!dataManagerOK()) return;
        Collection<INCategory> categorias = DataManager.getInstance().getCategorias();
        DefaultMutableTreeNode nodeCategoria = null;
        for(INCategory categoria : categorias) {
            nodeCategoria = new DefaultMutableTreeNode(categoria);
            nodeCategorias.add(nodeCategoria);
        }
        treeModel.reload(nodeCategorias);
    }
    
    /*
     * Montagem do nó de Locais
     */
    public void populateTreeLocation() {
        if(!dataManagerOK()) return;
        nodeLocais.removeAllChildren();
        Collection<INLocation> locais = DataManager.getInstance().getLocais();
        DefaultMutableTreeNode nodeLocal = null;
        for(INLocation local : locais) {
            nodeLocal = new DefaultMutableTreeNode(local);
            nodeLocais.add(nodeLocal);
        }
        treeModel.reload(nodeLocais);
    }
    
    /*
     * Montagem do nó de Marcas
     */
    public void populateTreeBrand() {
        if(!dataManagerOK()) return;
        nodeMarcas.removeAllChildren();
        Collection<INBrand> marcas = DataManager.getInstance().getMarcas();
        DefaultMutableTreeNode nodeMarca = null;
        for(INBrand marca : marcas) {
            nodeMarca = new DefaultMutableTreeNode(marca);
            nodeMarcas.add(nodeMarca);
        }
        treeModel.reload(nodeMarcas);
    }
    
    /*
     * Montagem do nó de Memberships
     */
    public void populateTreeMembers() {
        if(!dataManagerOK()) return;
        nodeMembers.removeAllChildren();
        Collection<INMembership> members = DataManager.getInstance().getMemberships();
        DefaultMutableTreeNode nodeMember = null;
        for(INMembership member : members) {
            nodeMember = new DefaultMutableTreeNode(member);
            
            nodeMembers.add(nodeMember);
        }
        treeModel.reload(nodeMembers);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvNautico().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.invnautico.core.gui.panel.BasicEntityPanel basicEntityPanel1;
    private br.com.invnautico.core.gui.introduction.GenericIntroductionPanel genericIntroductionPanel1;
    private br.com.invnautico.core.gui.introduction.IntroductionPanel introductionPanel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private br.com.invnautico.core.gui.panel.MembershipPanel membershipPanel1;
    private javax.swing.JMenu menuAparencia;
    private javax.swing.JMenuItem menuAparenciaJava;
    private javax.swing.JMenuItem menuAparenciaUnix;
    private javax.swing.JMenuItem menuAparenciaWindows;
    private javax.swing.JMenuBar menuBarPrincipal;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuItem menuEditRefresh;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuNewBrand;
    private javax.swing.JMenuItem menuNewCategory;
    private javax.swing.JMenuItem menuNewComponent;
    private javax.swing.JMenuItem menuNewEquipment;
    private javax.swing.JMenuItem menuNewLocation;
    private javax.swing.JMenuItem menuNewMember;
    private javax.swing.JPopupMenu menuNodes;
    private javax.swing.JMenuItem menuNodesColar;
    private javax.swing.JMenuItem menuNodesCopiar;
    private javax.swing.JMenuItem menuNodesDelete;
    private javax.swing.JMenuItem menuNodesNew;
    private javax.swing.JMenuItem menuNodesRecortar;
    private javax.swing.JPanel panelAreaDados;
    private javax.swing.JPanel panelArvoreDados;
    private javax.swing.JTree treeInventario;
    // End of variables declaration//GEN-END:variables
    
}
